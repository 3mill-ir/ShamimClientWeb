@model  ClientWeb.Models.DataModels.UserInformationDataModel
@section js_Requested {
    <script src="@TempData["WebsiteThemePath"]assets/js/DateTimePicker/jalaali.js"></script>
    <script src="@TempData["WebsiteThemePath"]assets/js/DateTimePicker/jquery.Bootstrap-PersianDateTimePicker.js"></script>
    <script>
        function PipoFunc(TargetIDName, ClassName) {
            var els = document.getElementsByClassName("ParentAttr_" + ClassName);
            Array.prototype.forEach.call(els, function (el) { el.classList.add('PipoHidden'); el.classList.remove('PipoShow'); });
            var item = document.getElementById('Attr_' + TargetIDName);
            if (item.classList.contains('PipoShow')) {
                item.classList.remove('PipoShow');
                item.classList.add('PipoHidden');
            }
            else {
                item.classList.remove('PipoHidden');
                item.classList.add('PipoShow');
            }
            console.log = console.warn = console.error = () => { };
            console.error('Something bad happened.');
        }
        function PipoRemove(ClassName) {
            var els = document.getElementsByClassName("ParentAttr_" + ClassName);
            Array.prototype.forEach.call(els, function (el) { el.classList.add('PipoHidden'); el.classList.remove('PipoShow'); });
        }
        function CheckBoxFixer(Status, IDName, Value1, Value2) {
            var temp = document.getElementById(IDName);
            if (Status == false)
                temp.setAttribute("value", Value1);
            else
                temp.setAttribute("value", Value2);
        }
        $('.PipoRadio').each(function () {
            if (this.checked) {
                this.click();
            }
        });
    </script>
}
@section css_Requested {
    <link href="@TempData["WebsiteThemePath"]assets/css/jquery.Bootstrap-PersianDateTimePicker.css" rel="stylesheet" />
    <style>
        .PipoHidden {
            display: none !important;
        }

        .PipoShow {
            display: block !important;
        }
    </style>
}
@using ClientWeb.Models.DataModels
@{TempData["FormCounter"] = 0; }
@using PagedList.Mvc;
@using ClientWeb.Models.BLL;
@{
    ViewBag.CurrentState = "EditProfile";
    TempData["PrePath"] = Tools.ReturnPath("FormFilesPath", TempData["UserName"].ToString(), "EditProfile");
}
<div class="columns-container">
    <div class="container" id="columns">
        <!-- row -->
        <div class="row">
            <!-- Center colunm-->
            <div class="center_column col-xs-12 col-sm-10 col-sm-push-1" id="center_column">
                <h2 class="page-heading" style="margin-bottom: 20px;margin-top: 7px;">
                    ویرایش حساب کاربری
                </h2>
                @using (Html.BeginForm("EditProfile", "Account", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.Hidden("ID", (ViewBag.RegisterForm as ItemNew).ID)
                    @Html.Hidden("F_MenuID", (ViewBag.RegisterForm as ItemNew).Menu.ID)
                    @Html.Hidden("Name", (ViewBag.RegisterForm as ItemNew).Name)
                    @Html.Hidden("Description", (ViewBag.RegisterForm as ItemNew).Description)
                    @Html.AntiForgeryToken()
                    <div class="box-authentication">
                        <h3 class="page-heading" style="margin-bottom: 20px;margin-top: 7px;font-size: 15px;">
                            اطلاعات پایه ای
                        </h3>
                        <div class="login-box-inner">
                            <div class="form-group" style="margin-top:20px;">
                                @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", @type = "text", placeholder = "نام", style = "float:right;" })
                            </div>
                            <div class="form-group" style="margin-top:20px;">
                                @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", @type = "text", placeholder = "نام خانوادگی" })
                            </div>
                            <div class="input-group" style="margin-top:20px;">
                                <span class="input-group-addon"><i class="fa fa-envelope"></i></span>
                                @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @type = "text", placeholder = "ایمیل" })
                            </div>
                            <div class="input-group" style="margin-top:20px;">
                                <span class="input-group-addon"><i class="fa fa-phone"></i></span>
                                @Html.TextBoxFor(model => model.CodeMelli, new { @class = "form-control", @type = "number", placeholder = "شماره همراه" })
                            </div>
                        </div>
                    </div>
                    <div id="AjaxResult">
                        @if ((ViewBag.RegisterForm as ItemNew).Menu != null)
                        {
                            @FormGenerator((ViewBag.RegisterForm as ItemNew).Menu.AttributeGroup.Where(u => u.F_AttributeGroupID == null), 0)
                        }
                        @helper FormGenerator(IEnumerable<ClientWeb.Models.DataModels.AttributeGroupNew> AttributeGroups, int count)
                        {
foreach (var item in AttributeGroups)
{
    var temp = item.AttributeGroup1;
        <div style="margin-right:@(count*50)px;">
            <div class="col-md-12 col-sm-12" style="margin-bottom:30px;margin-top:30px;">
                <div class="ad-detail-heading">
                    <h4>@item.Name</h4>
                </div>
            </div>
            @foreach (var attribute in item.Attribute)
        {
                @Attr_AttrItem(attribute, 0, false)
            }
        </div>
    if (temp.Count() > 0)
    {
            @FormGenerator(temp, count + 1)
    }
}
}
                        @helper Attr_AttrItem(ClientWeb.Models.DataModels.AttributeNew attribute, int count2, bool flag, string IDName = "", string ClassName = "")
                        {
var PipoValue = attribute.AttributeValue.Count > 0 ? attribute.AttributeValue[0].Value : null;
    <div id="@IDName" class="col-md-12 @ClassName @(flag ? "PipoHidden" : "PipoShow") col-sm-12" style="margin-bottom:10px;">
        <div style="margin-right:@(50 * count2)px" class="form-group @(attribute.ComponentType == "CheckBox" ? "toggle-btn" : "")">
            <label class="col-sm-3 col-form-label">@attribute.Name</label>
            <div class="col-sm-9">
                @if (attribute.ComponentType == "TextBox" || attribute.ComponentType == "Number")
                {
                    <input value="@PipoValue" type="@(attribute.ComponentType == "TextBox" ? "text" : attribute.ComponentType == "Number" ? "number" : "date")" class="form-control" title="" name="Attributes[@TempData["FormCounter"]].Value" placeholder="@attribute.Name را وارد کنید">
                }
                else if (attribute.ComponentType == "DateTime")
                {
                    <div class="input-group">
                        <div class="input-group-addon" data-disablebeforetoday="false" data-mddatetimepicker="true" data-targetselector="#exampleInput_@attribute.ID" data-trigger="click" data-enabletimepicker="true" data-mdpersiandatetimepicker="" data-mdformat="yyyy/MM/dd HH:mm:ss" data-mdpersiandatetimepickerselecteddatetime="{&quot;Year&quot;:1397,&quot;Month&quot;:6,&quot;Day&quot;:13,&quot;Hour&quot;:0,&quot;Minute&quot;:0,&quot;Second&quot;:0}" style="cursor: pointer;" data-original-title="" title="" data-mdpersiandatetimepickershowing="false">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </div>
                        <input type="datetime" value="@PipoValue" style="direction:ltr;" class="form-control" id="exampleInput_@attribute.ID" title="" name="Attributes[@TempData["FormCounter"]].Value" placeholder="@attribute.Name را وارد کنید">
                    </div>
                }
                else if (attribute.ComponentType == "RichTextBox")
                {
                    <textarea value="@PipoValue" class="form-control" title="" name="Attributes[@TempData["FormCounter"]].Value" placeholder="@attribute.Name را وارد کنید" rows="5">@PipoValue</textarea>
                }
                else if (attribute.ComponentType == "CheckBox2")
                {
                    var AtHelper = attribute.AttributeItem1;
                    if (AtHelper.Count > 1)
                    {
                        <div style="margin-bottom:10px;">
                            <input value="@PipoValue" data-toggle="toggle" name="Attributes[@TempData["FormCounter"]].Value" data-on="@AtHelper[0].Name" data-style="slow android" data-onstyle="info" data-off="@AtHelper[1].Name" type="checkbox" onchange="if($(this).is(':checked')){@(AtHelper[0].Attribute.Count > 0 ? flag ? "PipoFunc(" + IDName + "," + ClassName + ")" : "PipoFunc(" + AtHelper[0].ID + "," + attribute.ID + ")" : "PipoRemove(" + (flag == true ? ClassName : attribute.ID + "") + ")")}else{@(AtHelper[1].Attribute.Count > 0 ? flag ? "PipoFunc(" + IDName + "," + ClassName + ")" : "PipoFunc(" + AtHelper[1].ID + "," + attribute.ID + ")" : "PipoRemove(" + (flag == true ? ClassName : attribute.ID + "") + ")")}">
                        </div>
                    }
                }
                else if (attribute.ComponentType == "CheckBox")
                {
                    var AtHelper = attribute.AttributeItem1;
                    if (AtHelper.Count > 1)
                    {
                        <div class="checkbox">
                            <label>
                                <input @(PipoValue == AtHelper[1].Name ? "checked" : "") onchange="CheckBoxFixer($(this).is(':checked'),'hidden_@attribute.ID','@AtHelper[0].Name','@AtHelper[1].Name')" type="checkbox" onclick="if($(this).is(':checked')){@(AtHelper[0].Attribute.Count > 0 ? flag ? "PipoFunc(" + IDName + "," + ClassName + ")" : "PipoFunc(" + AtHelper[0].ID + "," + attribute.ID + ")" : "PipoRemove(" + (flag == true ? ClassName : attribute.ID + "") + ")")}else{@(AtHelper[1].Attribute.Count > 0 ? flag ? "PipoFunc(" + IDName + "," + ClassName + ")" : "PipoFunc(" + AtHelper[1].ID + "," + attribute.ID + ")" : "PipoRemove(" + (flag == true ? ClassName : attribute.ID + "") + ")")}">
                                @*<span class="cr"><i class="cr-icon fa fa-check"></i></span>*@
                                <input value="@PipoValue" hidden name="Attributes[@TempData["FormCounter"]].Value" id="hidden_@attribute.ID" />
                            </label>
                        </div>
                    }
                }
                else if (attribute.ComponentType == "MultiCheckBox")
                {
                    foreach (var AtItem in attribute.AttributeItem1)
                    {
                        <div class="checkbox" style="float:right;margin-top:0;margin-right:10px;">
                            <label>
                                <input type="checkbox" name="Attributes[@TempData["FormCounter"]].Value" value="@AtItem.Name">@AtItem.Name
                            </label>
                        </div>
                    }
                    <input value="@PipoValue" hidden name="Attributes[@TempData["FormCounter"]].Value" id="hidden_@attribute.ID" />
                }
                else if (attribute.ComponentType == "ComboBox")
                {
                    <select value="@PipoValue" name="Attributes[@TempData["FormCounter"]].Value" class="select-general form-control">
                        @foreach (var AtItem in attribute.AttributeItem1)
                        {
                            <option @(PipoValue == AtItem.Name ? "selected" : "") onchange="@(AtItem.Attribute.Count > 0 ? flag ? "PipoFunc(" + IDName + "," + ClassName + ")" : "PipoFunc(" + AtItem.ID + "," + attribute.ID + ")" : "PipoRemove(" + (flag == true ? ClassName : attribute.ID + "") + ")")">@AtItem.Name</option>
                        }
                    </select>
                }
                else if (attribute.ComponentType == "RadioButton")
                {
                    foreach (var AtItem in attribute.AttributeItem1)
                    {
                        <div class="radio" style="float:right;margin-top:0;margin-right:10px;">
                            <label>
                                <input class="PipoRadio" onclick="@(AtItem.Attribute.Count > 0 ? flag ? "PipoFunc(" + IDName + "," + ClassName + ")" : "PipoFunc(" + AtItem.ID + "," + attribute.ID + ")" : "PipoRemove(" + (flag == true ? ClassName : attribute.ID + "") + ")")" type="radio" name="Attributes[@TempData["FormCounter"]].Value" @(AtItem.Name == PipoValue ? "checked" : "") value="@AtItem.Name">
                                @AtItem.Name
                            </label>
                        </div>
                    }
                }
                else if (attribute.ComponentType == "Media")
                {
                    <div id="PipoFileBox_@attribute.ID">
                        @*<button onclick="PipoFileBox()" style="background-color:#2a3259;color:white;" class="btn btn-default btn-search-submit pull-right flip">افزودن تصویر</button>*@
                        <input type="file" name="Attributes[@TempData["FormCounter"]].File" style="float:right;" />
                        @if (!string.IsNullOrEmpty(PipoValue))
                        {<img src="@TempData["PrePath"].ToString()@PipoValue" style="height: 70px;float: right;"/>
                        @Html.Hidden("Attributes[" + TempData["FormCounter"] + "].Value", PipoValue)
                        }
                    </div>
                }
                else if (attribute.ComponentType == "InfText")
                {
                    <span>@attribute.Name</span>
                }
                @Html.Hidden("Attributes[" + TempData["FormCounter"] + "].F_AttributeItemID", attribute.F_AttributeItemID)
                @Html.Hidden("Attributes[" + TempData["FormCounter"] + "].F_AttributeID", attribute.ID)
                @{TempData["FormCounter"] = int.Parse(TempData["FormCounter"].ToString()) + 1;}
            </div>
        </div>
        @foreach (var item in attribute.AttributeItem1)
        {
            foreach (var attr in item.Attribute)
            {
                @Attr_AttrItem(attr, count2 + 1, true, "Attr_" + item.ID, "ParentAttr_" + attribute.ID)
            }
        }
    </div>
}
                    </div>
                    <div class="col-md-12 col-sm-12 col-xs-12">
                        <div class="form-group form-action">
                            <button type="submit" style="background-color:#2a3259;color:white;" class="btn btn-default btn-search-submit pull-right flip">ثبت اطلاعات</button>
                        </div>
                    </div>
                }
            </div>
            <!-- ./ Center colunm -->
        </div>
        <!-- ./row-->
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        //Dropdownlist Selectedchange event
        $("#State").change(function () {
            $("#City").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetCity", "Utility")',
                dataType: 'json',
                data: { id: $("#State").val() },
                success: function (states) {
                    $.each(states, function (i, state) {
                        $("#City").append('<option value="' + state.Value + '">' + state.Text + '</option>');
                    });
                    $("#City").trigger('change');
                },
                error: function (ex) {
                    alert('خطا در بارگذاری اطلاعات شهر' + ex);
                }
            });
            return false;
        });
    });
</script>